# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
import pandas as pd  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
import dash  # –§—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
from dash import dcc, html  # –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Dash: —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ –≥—Ä–∞—Ñ–∏–∫–∞
import plotly.express as px  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤

# –ó–∞–¥–∞–Ω–∏–µ –ø—É—Ç–∏ –∫ Excel-—Ñ–∞–π–ª—É —Å ESG-–æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å—é
excel_path = "PhosAgro_ESG_databook-Rus.xlsx"

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤ Excel-—Ñ–∞–π–ª–∞ –≤ —Å–ª–æ–≤–∞—Ä—å (–∫–ª—é—á ‚Äî –∏–º—è –ª–∏—Å—Ç–∞, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî DataFrame)
df = pd.read_excel(excel_path, sheet_name=None, engine="openpyxl")

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ª–∏—Å—Ç–∞ "–ö–û–†–ü–û–†–ê–¢–ò–í–ù–û–ï –£–ü–†–ê–í–õ–ï–ù–ò–ï"
corporate_governance_df = df.get("–ö–û–†–ü–û–†–ê–¢–ò–í–ù–û–ï –£–ü–†–ê–í–õ–ï–ù–ò–ï")

# –°–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –º–µ—Ç—Ä–∏–∫ (—Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã)
metrics_of_interest = [
    "–î–æ–ª—è –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –≤ —Å–æ—Å—Ç–∞–≤–µ –ö–æ–º–∏—Ç–µ—Ç–∞",
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Å–µ–¥–∞–Ω–∏–π –∫–æ–º–∏—Ç–µ—Ç–∞",
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–ª–µ–Ω–æ–≤ –ü—Ä–∞–≤–ª–µ–Ω–∏—è",
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Å–µ–¥–∞–Ω–∏–π –ü—Ä–∞–≤–ª–µ–Ω–∏—è",
    "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞—â–µ–Ω–∏–π, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏—Ö –Ω–∞ –ø–æ—Ä—Ç–∞–ª ¬´–ì–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏ ¬´–§–æ—Å–ê–≥—Ä–æ¬ª",
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞—â–µ–Ω–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ–º –∫–æ—Ä—Ä—É–ø—Ü–∏–∏ ",
    "–†–∞–∑–º–µ—Ä –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∞ ",
    "–î–æ–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–Ω—ã—Ö —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏/–ø–æ–ª–∏—Ç–∏–∫–∞–º–∏ –§–æ—Å–ê–≥—Ä–æ –ø–æ –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—é –∫–æ—Ä—Ä—É–ø—Ü–∏–∏",
]

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
filtered_corporate_governance_df = corporate_governance_df[
    corporate_governance_df.iloc[:, 0].isin(metrics_of_interest)
]

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Dash-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = dash.Dash(__name__)
app.title = "Corporate Governance Dashboard"  # –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app.layout = html.Div([
    html.H1("üìä –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –¥—ç—à–±–æ—Ä–¥", style={'textAlign': 'center'}),  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ —Ü–µ–Ω—Ç—Ä—É
    dcc.Dropdown(
        id="metric-selector",  # ID –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
        options=[{"label": metric, "value": metric} for metric in metrics_of_interest],  # –ü—É–Ω–∫—Ç—ã –≤—ã–±–æ—Ä–∞
        value=metrics_of_interest[0],  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        style={"width": "80%", "margin": "0 auto"}  # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –ø–æ —à–∏—Ä–∏–Ω–µ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—é
    ),
    dcc.Graph(id="line-chart")  # –ì—Ä–∞—Ñ–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
])

# –û–±—Ä–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤ (callback) ‚Äî –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥—Ä—É–≥–æ–π –º–µ—Ç—Ä–∏–∫–∏
@app.callback(
    dash.dependencies.Output("line-chart", "figure"),  # –û–±–Ω–æ–≤–ª—è–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç ‚Äî –≥—Ä–∞—Ñ–∏–∫
    [dash.dependencies.Input("metric-selector", "value")]  # –í—Ö–æ–¥–Ω–æ–π —ç–ª–µ–º–µ–Ω—Ç ‚Äî –≤—ã–±–æ—Ä –º–µ—Ç—Ä–∏–∫–∏
)
def update_chart(selected_metric):
    # –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–µ—Ç—Ä–∏–∫–µ
    row = filtered_corporate_governance_df[
        filtered_corporate_governance_df.iloc[:, 0] == selected_metric
    ].iloc[0]

    # –ó–∞–¥–∞–µ–º –≥–æ–¥—ã –∏ –∑–Ω–∞—á–µ–Ω–∏—è (–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ, –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫–æ–ª–æ–Ω–∫–∞—Ö —Å 3 –ø–æ 7)
    years = ["2019", "2020", "2021", "2022", "2023"]
    values = row.iloc[2:7].tolist()

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ª–∏–Ω–µ–π–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
    fig = px.line(x=years, y=values, markers=True, title=f"{selected_metric} (2019‚Äì2023)")
    fig.update_layout(xaxis_title="Year", yaxis_title="Value", template="plotly_white")
    return fig  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏ (debug=True)
if __name__ == "__main__":
    app.run(debug=True)
